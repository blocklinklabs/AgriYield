{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/lib/hybrid-store.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nexport interface WalletState {\n  accountId: string | null;\n  isConnected: boolean;\n  connect: (accountId: string) => void;\n  disconnect: () => void;\n}\n\nexport interface FarmData {\n  id: string;\n  cropType: string;\n  location: string;\n  soilMoisture: number;\n  weatherNotes: string;\n  photo?: string;\n  timestamp: Date;\n}\n\nexport interface YieldPrediction {\n  cropType: string;\n  predictedYield: number;\n  riskLevel: number;\n  confidence: number;\n  timestamp: Date;\n}\n\nexport interface Loan {\n  id: string;\n  amount: number;\n  interestRate: number;\n  status: \"active\" | \"pending\" | \"completed\";\n  collateral: string[];\n  startDate: Date;\n  endDate: Date;\n}\n\nexport interface HarvestToken {\n  id: string;\n  cropType: string;\n  amount: number;\n  tokenizedAmount: number;\n  status: \"pending\" | \"tokenized\" | \"sold\";\n  qrCode: string;\n}\n\nexport interface Badge {\n  id: string;\n  name: string;\n  description: string;\n  earned: boolean;\n  earnedDate?: Date;\n}\n\nexport interface AppState {\n  // Wallet\n  wallet: WalletState;\n\n  // Farm Data\n  farmData: FarmData[];\n  addFarmData: (data: Omit<FarmData, \"id\" | \"timestamp\">) => Promise<void>;\n\n  // Yield Predictions\n  yieldPredictions: YieldPrediction[];\n  addYieldPrediction: (\n    prediction: Omit<YieldPrediction, \"timestamp\">\n  ) => Promise<void>;\n\n  // Loans\n  loans: Loan[];\n  addLoan: (loan: Omit<Loan, \"id\">) => Promise<void>;\n  updateLoanStatus: (loanId: string, status: Loan[\"status\"]) => Promise<void>;\n\n  // Harvest Tokens\n  harvestTokens: HarvestToken[];\n  addHarvestToken: (\n    token: Omit<HarvestToken, \"id\" | \"qrCode\">\n  ) => Promise<void>;\n  updateTokenStatus: (\n    tokenId: string,\n    status: HarvestToken[\"status\"]\n  ) => Promise<void>;\n\n  // Badges\n  badges: Badge[];\n  earnBadge: (badgeId: string) => Promise<void>;\n\n  // Offline\n  isOnline: boolean;\n  setOnlineStatus: (status: boolean) => void;\n\n  // Database sync\n  syncWithDatabase: () => Promise<void>;\n  isDatabaseConnected: boolean;\n}\n\nexport const useHybridStore = create<AppState>()(\n  persist(\n    (set, get) => ({\n      // Wallet\n      wallet: {\n        accountId: null,\n        isConnected: false,\n        connect: async (accountId: string) => {\n          set((state) => ({\n            wallet: { ...state.wallet, accountId, isConnected: true },\n          }));\n\n          // Initialize user in database\n          try {\n            await fetch(\"/api/user/initialize\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ walletAddress: accountId }),\n            });\n            await get().syncWithDatabase();\n          } catch (error) {\n            console.error(\"Failed to sync with database:\", error);\n          }\n        },\n        disconnect: () =>\n          set((state) => ({\n            wallet: { ...state.wallet, accountId: null, isConnected: false },\n          })),\n      },\n\n      // Farm Data\n      farmData: [],\n      addFarmData: async (data) => {\n        const newData = {\n          ...data,\n          id: crypto.randomUUID(),\n          timestamp: new Date(),\n        };\n\n        set((state) => ({\n          farmData: [...state.farmData, newData],\n        }));\n\n        // Save to database\n        try {\n          await fetch(\"/api/farm-data\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n          });\n        } catch (error) {\n          console.error(\"Failed to save farm data to database:\", error);\n        }\n      },\n\n      // Yield Predictions\n      yieldPredictions: [],\n      addYieldPrediction: async (prediction) => {\n        const newPrediction = {\n          ...prediction,\n          timestamp: new Date(),\n        };\n\n        set((state) => ({\n          yieldPredictions: [...state.yieldPredictions, newPrediction],\n        }));\n\n        // Save to database\n        try {\n          await fetch(\"/api/yield-predictions\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(prediction),\n          });\n        } catch (error) {\n          console.error(\"Failed to save yield prediction to database:\", error);\n        }\n      },\n\n      // Loans\n      loans: [],\n      addLoan: async (loan) => {\n        const newLoan = {\n          ...loan,\n          id: crypto.randomUUID(),\n        };\n\n        set((state) => ({\n          loans: [...state.loans, newLoan],\n        }));\n\n        // Save to database\n        try {\n          await fetch(\"/api/loans\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(loan),\n          });\n        } catch (error) {\n          console.error(\"Failed to save loan to database:\", error);\n        }\n      },\n      updateLoanStatus: async (loanId, status) => {\n        set((state) => ({\n          loans: state.loans.map((loan) =>\n            loan.id === loanId ? { ...loan, status } : loan\n          ),\n        }));\n\n        // Update in database\n        try {\n          // Database update would go here\n        } catch (error) {\n          console.error(\"Failed to update loan status in database:\", error);\n        }\n      },\n\n      // Harvest Tokens\n      harvestTokens: [],\n      addHarvestToken: async (token) => {\n        const newToken = {\n          ...token,\n          id: crypto.randomUUID(),\n          qrCode: `https://agriyield.app/token/${crypto.randomUUID()}`,\n        };\n\n        set((state) => ({\n          harvestTokens: [...state.harvestTokens, newToken],\n        }));\n\n        // Save to database\n        try {\n          await fetch(\"/api/harvest-tokens\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(token),\n          });\n        } catch (error) {\n          console.error(\"Failed to save harvest token to database:\", error);\n        }\n      },\n      updateTokenStatus: async (tokenId, status) => {\n        set((state) => ({\n          harvestTokens: state.harvestTokens.map((token) =>\n            token.id === tokenId ? { ...token, status } : token\n          ),\n        }));\n\n        // Update in database\n        try {\n          // Database update would go here\n        } catch (error) {\n          console.error(\"Failed to update token status in database:\", error);\n        }\n      },\n\n      // Badges\n      badges: [\n        {\n          id: \"data-contributor\",\n          name: \"Data Contributor\",\n          description: \"Submit 3+ farm data entries\",\n          earned: false,\n        },\n        {\n          id: \"yield-predictor\",\n          name: \"Yield Predictor\",\n          description: \"Get your first yield prediction\",\n          earned: false,\n        },\n        {\n          id: \"token-holder\",\n          name: \"Token Holder\",\n          description: \"Tokenize your first harvest\",\n          earned: false,\n        },\n        {\n          id: \"loan-borrower\",\n          name: \"Loan Borrower\",\n          description: \"Take your first loan\",\n          earned: false,\n        },\n      ],\n      earnBadge: async (badgeId) => {\n        const badge = get().badges.find((b) => b.id === badgeId);\n        if (!badge) return;\n\n        set((state) => ({\n          badges: state.badges.map((badge) =>\n            badge.id === badgeId\n              ? { ...badge, earned: true, earnedDate: new Date() }\n              : badge\n          ),\n        }));\n\n        // Save to database\n        try {\n          await fetch(\"/api/badges\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              badgeId,\n              name: badge.name,\n              description: badge.description,\n            }),\n          });\n        } catch (error) {\n          console.error(\"Failed to save badge to database:\", error);\n        }\n      },\n\n      // Offline\n      isOnline: true,\n      setOnlineStatus: (status) => set({ isOnline: status }),\n\n      // Database sync\n      isDatabaseConnected: false,\n      syncWithDatabase: async () => {\n        try {\n          const response = await fetch(\"/api/user/data\");\n          const userData = await response.json();\n          set({\n            farmData: userData.farmData,\n            yieldPredictions: userData.yieldPredictions,\n            loans: userData.loans,\n            harvestTokens: userData.harvestTokens,\n            badges: userData.badges,\n            isDatabaseConnected: true,\n          });\n        } catch (error) {\n          console.error(\"Failed to sync with database:\", error);\n          set({ isDatabaseConnected: false });\n        }\n      },\n    }),\n    {\n      name: \"agriyield-hybrid-storage\",\n      partialize: (state) => ({\n        wallet: state.wallet,\n        farmData: state.farmData,\n        yieldPredictions: state.yieldPredictions,\n        loans: state.loans,\n        harvestTokens: state.harvestTokens,\n        badges: state.badges,\n        isDatabaseConnected: state.isDatabaseConnected,\n      }),\n    }\n  )\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/lib/store.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\nimport { safeDate } from \"./utils\";\n\n// Re-export the hybrid store as the main store\nexport { useHybridStore as useAppStore } from \"./hybrid-store\";\n\nexport interface WalletState {\n  accountId: string | null;\n  isConnected: boolean;\n  connect: (accountId: string) => void;\n  disconnect: () => void;\n}\n\nexport interface FarmData {\n  id: string;\n  cropType: string;\n  location: string;\n  soilMoisture: number;\n  weatherNotes: string;\n  photo?: string;\n  timestamp: Date;\n}\n\nexport interface YieldPrediction {\n  cropType: string;\n  predictedYield: number;\n  riskLevel: number;\n  confidence: number;\n  timestamp: Date;\n}\n\nexport interface Loan {\n  id: string;\n  amount: number;\n  interestRate: number;\n  status: \"active\" | \"pending\" | \"completed\";\n  collateral: string[];\n  startDate: Date;\n  endDate: Date;\n}\n\nexport interface HarvestToken {\n  id: string;\n  cropType: string;\n  amount: number;\n  tokenizedAmount: number;\n  status: \"pending\" | \"tokenized\" | \"sold\";\n  qrCode: string;\n}\n\nexport interface Badge {\n  id: string;\n  name: string;\n  description: string;\n  earned: boolean;\n  earnedDate?: Date;\n}\n\nexport interface AppState {\n  // Wallet\n  wallet: WalletState;\n\n  // Farm Data\n  farmData: FarmData[];\n  addFarmData: (data: Omit<FarmData, \"id\" | \"timestamp\">) => void;\n\n  // Yield Predictions\n  yieldPredictions: YieldPrediction[];\n  addYieldPrediction: (prediction: Omit<YieldPrediction, \"timestamp\">) => void;\n\n  // Loans\n  loans: Loan[];\n  addLoan: (loan: Omit<Loan, \"id\">) => void;\n  updateLoanStatus: (loanId: string, status: Loan[\"status\"]) => void;\n\n  // Harvest Tokens\n  harvestTokens: HarvestToken[];\n  addHarvestToken: (token: Omit<HarvestToken, \"id\" | \"qrCode\">) => void;\n  updateTokenStatus: (tokenId: string, status: HarvestToken[\"status\"]) => void;\n\n  // Badges\n  badges: Badge[];\n  earnBadge: (badgeId: string) => void;\n\n  // Offline\n  isOnline: boolean;\n  setOnlineStatus: (status: boolean) => void;\n}\n\n// The useAppStore is now exported from hybrid-store.ts\n"],"names":[],"mappings":";AAIA,+CAA+C;AAC/C;;CAqFA,uDAAuD","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/lib/simulation-data.ts"],"sourcesContent":["// Simulation data for AgriYield app\n// This file contains realistic data to make the app appear fully functional\n\n// Fixed timestamps to avoid hydration issues\nconst baseDate = new Date(\"2024-09-30T10:00:00Z\");\n\nexport const simulationData = {\n  // Realistic farm data entries\n  farmData: [\n    {\n      id: \"farm-1\",\n      cropType: \"Maize\",\n      location: \"Kumasi, Ghana\",\n      soilMoisture: 78,\n      weatherNotes: \"Sunny with light clouds, optimal growing conditions\",\n      timestamp: new Date(baseDate.getTime() - 2 * 24 * 60 * 60 * 1000), // 2 days ago\n    },\n    {\n      id: \"farm-2\",\n      cropType: \"Cocoa\",\n      location: \"Takoradi, Ghana\",\n      soilMoisture: 82,\n      weatherNotes: \"Heavy rainfall, good for cocoa growth\",\n      timestamp: new Date(baseDate.getTime() - 5 * 24 * 60 * 60 * 1000), // 5 days ago\n    },\n    {\n      id: \"farm-3\",\n      cropType: \"Rice\",\n      location: \"Tamale, Ghana\",\n      soilMoisture: 85,\n      weatherNotes: \"Irrigation system working well, fields flooded\",\n      timestamp: new Date(baseDate.getTime() - 7 * 24 * 60 * 60 * 1000), // 7 days ago\n    },\n    {\n      id: \"farm-4\",\n      cropType: \"Cassava\",\n      location: \"Accra, Ghana\",\n      soilMoisture: 72,\n      weatherNotes: \"Dry season, need to increase irrigation\",\n      timestamp: new Date(baseDate.getTime() - 10 * 24 * 60 * 60 * 1000), // 10 days ago\n    },\n    {\n      id: \"farm-5\",\n      cropType: \"Wheat\",\n      location: \"Kumasi, Ghana\",\n      soilMoisture: 68,\n      weatherNotes: \"Cool weather, wheat growing well\",\n      timestamp: new Date(baseDate.getTime() - 14 * 24 * 60 * 60 * 1000), // 14 days ago\n    },\n  ],\n\n  // Realistic yield predictions\n  yieldPredictions: [\n    {\n      cropType: \"Maize\",\n      predictedYield: 4.2,\n      riskLevel: 12,\n      confidence: 89,\n      timestamp: new Date(baseDate.getTime() - 1 * 24 * 60 * 60 * 1000), // 1 day ago\n    },\n    {\n      cropType: \"Cocoa\",\n      predictedYield: 2.8,\n      riskLevel: 18,\n      confidence: 85,\n      timestamp: new Date(baseDate.getTime() - 3 * 24 * 60 * 60 * 1000), // 3 days ago\n    },\n    {\n      cropType: \"Rice\",\n      predictedYield: 3.5,\n      riskLevel: 8,\n      confidence: 92,\n      timestamp: new Date(baseDate.getTime() - 6 * 24 * 60 * 60 * 1000), // 6 days ago\n    },\n  ],\n\n  // Realistic loans\n  loans: [\n    {\n      id: \"loan-1\",\n      amount: 1500,\n      interestRate: 6.5,\n      status: \"active\" as const,\n      collateral: [\"Maize harvest tokens\"],\n      startDate: new Date(baseDate.getTime() - 30 * 24 * 60 * 60 * 1000), // 30 days ago\n      endDate: new Date(baseDate.getTime() + 150 * 24 * 60 * 60 * 1000), // 150 days from now\n    },\n  ],\n\n  // Realistic harvest tokens\n  harvestTokens: [\n    {\n      id: \"token-1\",\n      cropType: \"Maize\",\n      amount: 4.2,\n      tokenizedAmount: 42,\n      status: \"tokenized\" as const,\n      qrCode: \"https://agriyield.app/token/maize-001\",\n    },\n    {\n      id: \"token-2\",\n      cropType: \"Cocoa\",\n      amount: 2.8,\n      tokenizedAmount: 28,\n      status: \"tokenized\" as const,\n      qrCode: \"https://agriyield.app/token/cocoa-001\",\n    },\n    {\n      id: \"token-3\",\n      cropType: \"Rice\",\n      amount: 3.5,\n      tokenizedAmount: 35,\n      status: \"pending\" as const,\n      qrCode: \"https://agriyield.app/token/rice-001\",\n    },\n  ],\n\n  // Realistic badges (some earned)\n  badges: [\n    {\n      id: \"data-contributor\",\n      name: \"Data Contributor\",\n      description: \"Submit 3+ farm data entries\",\n      earned: true,\n      earnedDate: new Date(baseDate.getTime() - 5 * 24 * 60 * 60 * 1000),\n    },\n    {\n      id: \"yield-predictor\",\n      name: \"Yield Predictor\",\n      description: \"Get your first yield prediction\",\n      earned: true,\n      earnedDate: new Date(baseDate.getTime() - 2 * 24 * 60 * 60 * 1000),\n    },\n    {\n      id: \"token-holder\",\n      name: \"Token Holder\",\n      description: \"Tokenize your first harvest\",\n      earned: true,\n      earnedDate: new Date(baseDate.getTime() - 1 * 24 * 60 * 60 * 1000),\n    },\n    {\n      id: \"loan-borrower\",\n      name: \"Loan Borrower\",\n      description: \"Take your first loan\",\n      earned: true,\n      earnedDate: new Date(baseDate.getTime() - 30 * 24 * 60 * 60 * 1000),\n    },\n  ],\n\n  // Additional realistic data for enhanced simulation\n  marketData: {\n    currentPrices: {\n      Maize: 450, // GHS per ton\n      Cocoa: 1200, // GHS per ton\n      Rice: 380, // GHS per ton\n      Wheat: 520, // GHS per ton\n      Cassava: 280, // GHS per ton\n    },\n    priceChanges: {\n      Maize: 5.2, // % change\n      Cocoa: -2.1, // % change\n      Rice: 3.8, // % change\n      Wheat: 1.5, // % change\n      Cassava: 4.3, // % change\n    },\n  },\n\n  // Weather data for realistic simulation\n  weatherData: {\n    current: {\n      temperature: 28,\n      humidity: 75,\n      rainfall: 12,\n      windSpeed: 8,\n      condition: \"Partly Cloudy\",\n    },\n    forecast: [\n      {\n        day: \"Today\",\n        high: 30,\n        low: 24,\n        condition: \"Sunny\",\n        rainfall: 0,\n      },\n      {\n        day: \"Tomorrow\",\n        high: 29,\n        low: 23,\n        condition: \"Partly Cloudy\",\n        rainfall: 5,\n      },\n      {\n        day: \"Day 3\",\n        high: 27,\n        low: 22,\n        condition: \"Rainy\",\n        rainfall: 15,\n      },\n    ],\n  },\n\n  // User profile data\n  userProfile: {\n    name: \"Kwame Asante\",\n    location: \"Kumasi, Ghana\",\n    farmSize: \"5.2 hectares\",\n    experience: \"8 years\",\n    crops: [\"Maize\", \"Cocoa\", \"Rice\", \"Cassava\"],\n    rating: 4.7,\n    totalHarvest: 156.8, // tons\n    totalEarnings: 45230, // GHS\n  },\n\n  // Analytics data for charts\n  analyticsData: {\n    monthlyHarvest: [\n      { month: \"Jan\", yield: 12.5, revenue: 5625 },\n      { month: \"Feb\", yield: 15.2, revenue: 6840 },\n      { month: \"Mar\", yield: 18.8, revenue: 8460 },\n      { month: \"Apr\", yield: 22.1, revenue: 9945 },\n      { month: \"May\", yield: 19.5, revenue: 8775 },\n      { month: \"Jun\", yield: 16.3, revenue: 7335 },\n    ],\n    cropDistribution: [\n      { crop: \"Maize\", percentage: 35, color: \"#10b981\" },\n      { crop: \"Cocoa\", percentage: 25, color: \"#f59e0b\" },\n      { crop: \"Rice\", percentage: 20, color: \"#3b82f6\" },\n      { crop: \"Cassava\", percentage: 15, color: \"#8b5cf6\" },\n      { crop: \"Wheat\", percentage: 5, color: \"#ef4444\" },\n    ],\n    riskAnalysis: {\n      low: 2,\n      medium: 1,\n      high: 0,\n    },\n  },\n\n  // Recent activities for timeline\n  recentActivities: [\n    {\n      id: \"activity-1\",\n      type: \"harvest\",\n      description: \"Harvested 4.2 tons of Maize\",\n      timestamp: new Date(baseDate.getTime() - 2 * 60 * 60 * 1000), // 2 hours ago\n      icon: \"🌾\",\n    },\n    {\n      id: \"activity-2\",\n      type: \"prediction\",\n      description: \"Received yield prediction for Cocoa\",\n      timestamp: new Date(baseDate.getTime() - 4 * 60 * 60 * 1000), // 4 hours ago\n      icon: \"📊\",\n    },\n    {\n      id: \"activity-3\",\n      type: \"loan\",\n      description: \"Loan payment of GHS 150 processed\",\n      timestamp: new Date(baseDate.getTime() - 1 * 24 * 60 * 60 * 1000), // 1 day ago\n      icon: \"💰\",\n    },\n    {\n      id: \"activity-4\",\n      type: \"token\",\n      description: \"Tokenized 2.8 tons of Cocoa\",\n      timestamp: new Date(baseDate.getTime() - 2 * 24 * 60 * 60 * 1000), // 2 days ago\n      icon: \"🪙\",\n    },\n  ],\n};\n\n// Helper function to generate realistic mock data\nexport const generateMockData = () => {\n  const cropTypes = [\"Maize\", \"Cocoa\", \"Rice\", \"Wheat\", \"Cassava\"];\n  const locations = [\"Kumasi\", \"Accra\", \"Tamale\", \"Takoradi\", \"Cape Coast\"];\n\n  return {\n    cropType: cropTypes[Math.floor(Math.random() * cropTypes.length)],\n    location: locations[Math.floor(Math.random() * locations.length)],\n    soilMoisture: Math.floor(Math.random() * 30) + 60, // 60-90%\n    weatherNotes: [\n      \"Optimal growing conditions\",\n      \"Heavy rainfall, good for growth\",\n      \"Sunny weather, need irrigation\",\n      \"Cloudy with light rain\",\n      \"Hot and dry, increase watering\",\n    ][Math.floor(Math.random() * 5)],\n  };\n};\n\n// Market price simulation\nexport const simulateMarketPrices = () => {\n  const basePrices = {\n    Maize: 450,\n    Cocoa: 1200,\n    Rice: 380,\n    Wheat: 520,\n    Cassava: 280,\n  };\n\n  return Object.entries(basePrices).map(([crop, price]) => ({\n    crop,\n    price: price + (Math.random() - 0.5) * 50, // ±25 GHS variation\n    change: (Math.random() - 0.5) * 10, // ±5% change\n  }));\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/components/SimulationProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useAppStore } from \"@/lib/store\";\nimport { simulationData } from \"@/lib/simulation-data\";\n\ninterface SimulationProviderProps {\n  children: React.ReactNode;\n}\n\nexport default function SimulationProvider({\n  children,\n}: SimulationProviderProps) {\n  const [isClient, setIsClient] = useState(false);\n  const {\n    farmData,\n    yieldPredictions,\n    loans,\n    harvestTokens,\n    badges,\n    addFarmData,\n    addYieldPrediction,\n    addLoan,\n    addHarvestToken,\n    earnBadge,\n  } = useAppStore();\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  useEffect(() => {\n    // Only run on client and if store is empty (first time user)\n    if (!isClient || farmData.length > 0) return;\n\n    // Add farm data\n    simulationData.farmData.forEach((data) => {\n      addFarmData({\n        cropType: data.cropType,\n        location: data.location,\n        soilMoisture: data.soilMoisture,\n        weatherNotes: data.weatherNotes,\n      });\n    });\n\n    // Add yield predictions\n    simulationData.yieldPredictions.forEach((prediction) => {\n      addYieldPrediction({\n        cropType: prediction.cropType,\n        predictedYield: prediction.predictedYield,\n        riskLevel: prediction.riskLevel,\n        confidence: prediction.confidence,\n      });\n    });\n\n    // Add loans\n    simulationData.loans.forEach((loan) => {\n      addLoan({\n        amount: loan.amount,\n        interestRate: loan.interestRate,\n        status: loan.status,\n        collateral: loan.collateral,\n        startDate: loan.startDate,\n        endDate: loan.endDate,\n      });\n    });\n\n    // Add harvest tokens\n    simulationData.harvestTokens.forEach((token) => {\n      addHarvestToken({\n        cropType: token.cropType,\n        amount: token.amount,\n        tokenizedAmount: token.tokenizedAmount,\n        status: token.status,\n      });\n    });\n\n    // Earn badges\n    simulationData.badges.forEach((badge) => {\n      if (badge.earned) {\n        earnBadge(badge.id);\n      }\n    });\n  }, [\n    isClient,\n    addFarmData,\n    addYieldPrediction,\n    addLoan,\n    addHarvestToken,\n    earnBadge,\n    farmData.length,\n  ]);\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAUe,SAAS,mBAAmB,EACzC,QAAQ,EACgB;IACxB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,EACJ,QAAQ,EACR,gBAAgB,EAChB,KAAK,EACL,aAAa,EACb,MAAM,EACN,WAAW,EACX,kBAAkB,EAClB,OAAO,EACP,eAAe,EACf,SAAS,EACV,GAAG,IAAA,sLAAW;IAEf,IAAA,kNAAS,EAAC;QACR,YAAY;IACd,GAAG,EAAE;IAEL,IAAA,kNAAS,EAAC;QACR,6DAA6D;QAC7D,IAAI,CAAC,YAAY,SAAS,MAAM,GAAG,GAAG;QAEtC,gBAAgB;QAChB,2IAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC/B,YAAY;gBACV,UAAU,KAAK,QAAQ;gBACvB,UAAU,KAAK,QAAQ;gBACvB,cAAc,KAAK,YAAY;gBAC/B,cAAc,KAAK,YAAY;YACjC;QACF;QAEA,wBAAwB;QACxB,2IAAc,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACvC,mBAAmB;gBACjB,UAAU,WAAW,QAAQ;gBAC7B,gBAAgB,WAAW,cAAc;gBACzC,WAAW,WAAW,SAAS;gBAC/B,YAAY,WAAW,UAAU;YACnC;QACF;QAEA,YAAY;QACZ,2IAAc,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,QAAQ;gBACN,QAAQ,KAAK,MAAM;gBACnB,cAAc,KAAK,YAAY;gBAC/B,QAAQ,KAAK,MAAM;gBACnB,YAAY,KAAK,UAAU;gBAC3B,WAAW,KAAK,SAAS;gBACzB,SAAS,KAAK,OAAO;YACvB;QACF;QAEA,qBAAqB;QACrB,2IAAc,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACpC,gBAAgB;gBACd,UAAU,MAAM,QAAQ;gBACxB,QAAQ,MAAM,MAAM;gBACpB,iBAAiB,MAAM,eAAe;gBACtC,QAAQ,MAAM,MAAM;YACtB;QACF;QAEA,cAAc;QACd,2IAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC7B,IAAI,MAAM,MAAM,EAAE;gBAChB,UAAU,MAAM,EAAE;YACpB;QACF;IACF,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA,SAAS,MAAM;KAChB;IAED,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/components/DatabaseProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useAppStore } from \"@/lib/store\";\n\nexport default function DatabaseProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [isClient, setIsClient] = useState(false);\n  const { wallet, syncWithDatabase, isDatabaseConnected } = useAppStore();\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isClient || !wallet.isConnected || !wallet.accountId) return;\n\n    // Sync with database when wallet connects\n    const syncData = async () => {\n      try {\n        await syncWithDatabase();\n        console.log(\"✅ Database sync completed\");\n      } catch (error) {\n        console.error(\"❌ Database sync failed:\", error);\n      }\n    };\n\n    syncData();\n  }, [isClient, wallet.isConnected, wallet.accountId, syncWithDatabase]);\n\n  if (!isClient) {\n    return <>{children}</>;\n  }\n\n  return (\n    <>\n      {children}\n      {/* Database connection indicator */}\n      {wallet.isConnected && (\n        <div className=\"fixed bottom-4 left-4 z-50\">\n          <div\n            className={`px-3 py-1 rounded-full text-xs font-medium ${\n              isDatabaseConnected\n                ? \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n                : \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\"\n            }`}\n          >\n            {isDatabaseConnected ? \"🟢 DB Connected\" : \"🟡 DB Offline\"}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAHA;;;;AAKe,SAAS,iBAAiB,EACvC,QAAQ,EAGT;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,GAAG,IAAA,sLAAW;IAErE,IAAA,kNAAS,EAAC;QACR,YAAY;IACd,GAAG,EAAE;IAEL,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,YAAY,CAAC,OAAO,WAAW,IAAI,CAAC,OAAO,SAAS,EAAE;QAE3D,0CAA0C;QAC1C,MAAM,WAAW;YACf,IAAI;gBACF,MAAM;gBACN,QAAQ,GAAG,CAAC;YACd,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;YAC3C;QACF;QAEA;IACF,GAAG;QAAC;QAAU,OAAO,WAAW;QAAE,OAAO,SAAS;QAAE;KAAiB;IAErE,IAAI,CAAC,UAAU;QACb,qBAAO;sBAAG;;IACZ;IAEA,qBACE;;YACG;YAEA,OAAO,WAAW,kBACjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAW,CAAC,2CAA2C,EACrD,sBACI,sEACA,yEACJ;8BAED,sBAAsB,oBAAoB;;;;;;;;;;;;;AAMvD","debugId":null}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/components/ClientOnly.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\ninterface ClientOnlyProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport default function ClientOnly({\n  children,\n  fallback = null,\n}: ClientOnlyProps) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AASe,SAAS,WAAW,EACjC,QAAQ,EACR,WAAW,IAAI,EACC;IAChB,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAE7C,IAAA,kNAAS,EAAC;QACR,cAAc;IAChB,GAAG,EAAE;IAEL,IAAI,CAAC,YAAY;QACf,qBAAO;sBAAG;;IACZ;IAEA,qBAAO;kBAAG;;AACZ","debugId":null}},
    {"offset": {"line": 843, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;;KAElC;IACL,IAAIF,QAAQC,GAAG,CAACK,yBAAyB,EAAE;;SAcpC;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;QAGT,OAAO;;IAOT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n"],"names":["module","exports","require","vendored","React"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/node_modules/zustand/esm/vanilla.mjs"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = ((createState) => createState ? createStoreImpl(createState) : createStoreImpl);\n\nexport { createStore };\n"],"names":[],"mappings":";;;;AAAA,MAAM,kBAAkB,CAAC;IACvB,IAAI;IACJ,MAAM,YAAY,aAAa,GAAG,IAAI;IACtC,MAAM,WAAW,CAAC,SAAS;QACzB,MAAM,YAAY,OAAO,YAAY,aAAa,QAAQ,SAAS;QACnE,IAAI,CAAC,OAAO,EAAE,CAAC,WAAW,QAAQ;YAChC,MAAM,gBAAgB;YACtB,QAAQ,CAAC,WAAW,OAAO,UAAU,OAAO,cAAc,YAAY,cAAc,IAAI,IAAI,YAAY,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO;YACjI,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS,OAAO;QAClD;IACF;IACA,MAAM,WAAW,IAAM;IACvB,MAAM,kBAAkB,IAAM;IAC9B,MAAM,YAAY,CAAC;QACjB,UAAU,GAAG,CAAC;QACd,OAAO,IAAM,UAAU,MAAM,CAAC;IAChC;IACA,MAAM,MAAM;QAAE;QAAU;QAAU;QAAiB;IAAU;IAC7D,MAAM,eAAe,QAAQ,YAAY,UAAU,UAAU;IAC7D,OAAO;AACT;AACA,MAAM,cAAe,CAAC,cAAgB,cAAc,gBAAgB,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/node_modules/zustand/esm/react.mjs"],"sourcesContent":["import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    React.useCallback(() => selector(api.getState()), [api, selector]),\n    React.useCallback(() => selector(api.getInitialState()), [api, selector])\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = ((createState) => createState ? createImpl(createState) : createImpl);\n\nexport { create, useStore };\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,WAAW,CAAC,MAAQ;AAC1B,SAAS,SAAS,GAAG,EAAE,WAAW,QAAQ;IACxC,MAAM,QAAQ,gNAAK,CAAC,oBAAoB,CACtC,IAAI,SAAS,EACb,gNAAK,CAAC,WAAW,CAAC,IAAM,SAAS,IAAI,QAAQ,KAAK;QAAC;QAAK;KAAS,GACjE,gNAAK,CAAC,WAAW,CAAC,IAAM,SAAS,IAAI,eAAe,KAAK;QAAC;QAAK;KAAS;IAE1E,gNAAK,CAAC,aAAa,CAAC;IACpB,OAAO;AACT;AACA,MAAM,aAAa,CAAC;IAClB,MAAM,MAAM,IAAA,yJAAW,EAAC;IACxB,MAAM,gBAAgB,CAAC,WAAa,SAAS,KAAK;IAClD,OAAO,MAAM,CAAC,eAAe;IAC7B,OAAO;AACT;AACA,MAAM,SAAU,CAAC,cAAgB,cAAc,WAAW,eAAe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/node_modules/zustand/esm/middleware.mjs"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = ((state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? {\n      type: anonymousActionType || findCallerName(new Error().stack) || \"anonymous\"\n    } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  });\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = ((selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  });\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    return setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      return setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}