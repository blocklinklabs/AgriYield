{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,8OAAC,0KAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,8OAAC,2KAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,8OAAC,6KAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,kHAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,0KAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,2OAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,8OAAC,4KAAsB;kBACrB,cAAA,8OAAC,6KAAuB;YACtB,aAAU;YACV,WAAW,IAAA,kHAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,8KAAwB;oBACvB,WAAW,IAAA,kHAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,2KAAqB;QACpB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,8OAAC,0KAAoB;QACnB,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,mLAA6B;8BAC5B,cAAA,8OAAC,qNAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,8OAAC,8KAAwB;0BAAE;;;;;;;;;;;;AAGjC;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,8OAAC,+KAAyB;QACxB,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,8OAAC,oLAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,qOAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,8OAAC,sLAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,2OAAe;YAAC,WAAU;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/app/lending/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useAppStore } from \"@/lib/store\";\nimport { formatCurrency, formatDate, calculateLoanInterest } from \"@/lib/utils\";\nimport { toast } from \"sonner\";\nimport {\n  DollarSign,\n  ArrowLeft,\n  Shield,\n  TrendingUp,\n  CheckCircle,\n  AlertTriangle,\n  CreditCard,\n  Coins,\n} from \"lucide-react\";\n\nexport default function Lending() {\n  const router = useRouter();\n  const {\n    wallet,\n    yieldPredictions,\n    loans,\n    harvestTokens,\n    addLoan,\n    addHarvestToken,\n    earnBadge,\n  } = useAppStore();\n\n  const [loanAmount, setLoanAmount] = useState(\"\");\n  const [selectedCrop, setSelectedCrop] = useState(\"\");\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isTokenizing, setIsTokenizing] = useState(false);\n\n  useEffect(() => {\n    if (!wallet.isConnected) {\n      router.push(\"/\");\n    }\n  }, [wallet.isConnected, router]);\n\n  const availableLoans = [\n    {\n      id: \"loan-1\",\n      amount: 500,\n      interestRate: 5.5,\n      term: \"6 months\",\n      collateral: \"Maize harvest tokens\",\n      description: \"Low-risk loan for established farmers\",\n    },\n    {\n      id: \"loan-2\",\n      amount: 1000,\n      interestRate: 7.2,\n      term: \"12 months\",\n      collateral: \"Cocoa harvest tokens\",\n      description: \"Medium-term loan for crop expansion\",\n    },\n    {\n      id: \"loan-3\",\n      amount: 2000,\n      interestRate: 9.8,\n      term: \"18 months\",\n      collateral: \"Mixed harvest tokens\",\n      description: \"Long-term loan for farm improvements\",\n    },\n  ];\n\n  const handleApplyLoan = async (loan: (typeof availableLoans)[0]) => {\n    setIsProcessing(true);\n    try {\n      // Simulate loan application\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n\n      // Add loan to store\n      addLoan({\n        amount: loan.amount,\n        interestRate: loan.interestRate,\n        status: \"active\",\n        collateral: [selectedCrop],\n        startDate: new Date(),\n        endDate: new Date(Date.now() + 6 * 30 * 24 * 60 * 60 * 1000), // 6 months\n      });\n\n      // Earn badge for first loan\n      if (loans.length === 0) {\n        earnBadge(\"loan-borrower\");\n      }\n\n      toast.success(`Loan of ${formatCurrency(loan.amount)} approved!`);\n    } catch (error) {\n      console.error(\"Failed to apply for loan:\", error);\n      toast.error(\"Failed to apply for loan. Please try again.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleTokenizeHarvest = async () => {\n    if (!selectedCrop || !loanAmount) {\n      toast.error(\"Please select a crop and enter amount\");\n      return;\n    }\n\n    setIsTokenizing(true);\n    try {\n      // Simulate tokenization\n      await new Promise((resolve) => setTimeout(resolve, 3000));\n\n      // Add harvest token\n      addHarvestToken({\n        cropType: selectedCrop,\n        amount: parseFloat(loanAmount),\n        tokenizedAmount: parseFloat(loanAmount) * 10, // 1 ton = 10 tokens\n        status: \"tokenized\",\n      });\n\n      // Earn badge for first tokenization\n      if (harvestTokens.length === 0) {\n        earnBadge(\"token-holder\");\n      }\n\n      toast.success(\"Harvest tokenized successfully!\");\n    } catch (error) {\n      console.error(\"Failed to tokenize harvest:\", error);\n      toast.error(\"Failed to tokenize harvest. Please try again.\");\n    } finally {\n      setIsTokenizing(false);\n    }\n  };\n\n  const activeLoan = loans.find((loan) => loan.status === \"active\");\n  const userYieldPredictions = yieldPredictions.filter(\n    (pred) => pred.cropType === selectedCrop\n  );\n  const latestPrediction =\n    userYieldPredictions[userYieldPredictions.length - 1];\n\n  if (!wallet.isConnected) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center gap-4\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => router.push(\"/dashboard\")}\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back\n        </Button>\n        <div>\n          <h1 className=\"text-3xl font-bold text-foreground\">\n            Lending & Tokenization\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Access loans using your harvest as collateral\n          </p>\n        </div>\n      </div>\n\n      {/* Active Loan Status */}\n      {activeLoan && (\n        <Card className=\"dashboard-card\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <CreditCard className=\"h-5 w-5\" />\n              Active Loan\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"p-4 bg-blue-50 dark:bg-blue-950 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div>\n                  <h3 className=\"font-semibold text-lg\">\n                    {formatCurrency(activeLoan.amount)}\n                  </h3>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                    Interest Rate: {activeLoan.interestRate}% APR\n                  </p>\n                </div>\n                <Badge variant=\"default\">Active</Badge>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <p className=\"text-gray-600 dark:text-gray-300\">Start Date</p>\n                  <p className=\"font-semibold\">\n                    {activeLoan.startDate\n                      ? formatDate(activeLoan.startDate)\n                      : \"N/A\"}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"text-gray-600 dark:text-gray-300\">Due Date</p>\n                  <p className=\"font-semibold\">\n                    {activeLoan.endDate\n                      ? formatDate(activeLoan.endDate)\n                      : \"N/A\"}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Tokenize Harvest */}\n        <Card className=\"dashboard-card\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Coins className=\"h-5 w-5\" />\n              Tokenize Your Harvest\n            </CardTitle>\n            <CardDescription>\n              Convert your harvest into tradeable tokens for collateral\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <label className=\"block text-sm font-medium\">Select Crop</label>\n              <Select value={selectedCrop} onValueChange={setSelectedCrop}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Choose crop to tokenize\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {[\"Maize\", \"Cocoa\", \"Rice\", \"Wheat\", \"Cassava\"].map(\n                    (crop) => (\n                      <SelectItem key={crop} value={crop}>\n                        {crop}\n                      </SelectItem>\n                    )\n                  )}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label className=\"block text-sm font-medium\">\n                Harvest Amount (tons)\n              </label>\n              <Input\n                type=\"number\"\n                placeholder=\"Enter harvest amount\"\n                value={loanAmount}\n                onChange={(e) => setLoanAmount(e.target.value)}\n              />\n            </div>\n\n            {latestPrediction && (\n              <div className=\"p-3 bg-green-50 dark:bg-green-950 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <TrendingUp className=\"h-4 w-4 text-green-600\" />\n                  <span className=\"text-sm font-medium\">\n                    Yield Prediction Available\n                  </span>\n                </div>\n                <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                  Predicted yield: {latestPrediction.predictedYield} tons\n                  <br />\n                  Risk level: {latestPrediction.riskLevel}%\n                </p>\n              </div>\n            )}\n\n            <Button\n              className=\"w-full btn-primary\"\n              onClick={handleTokenizeHarvest}\n              disabled={isTokenizing || !selectedCrop || !loanAmount}\n            >\n              {isTokenizing ? (\n                <>\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                  Tokenizing...\n                </>\n              ) : (\n                <>\n                  <Coins className=\"mr-2 h-4 w-4\" />\n                  Tokenize Harvest\n                </>\n              )}\n            </Button>\n          </CardContent>\n        </Card>\n\n        {/* Available Loans */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <DollarSign className=\"h-5 w-5\" />\n              Available Loans\n            </CardTitle>\n            <CardDescription>\n              Apply for loans using your tokenized harvest as collateral\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {availableLoans.map((loan) => (\n              <div\n                key={loan.id}\n                className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\"\n              >\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h3 className=\"font-semibold\">\n                    {formatCurrency(loan.amount)}\n                  </h3>\n                  <Badge variant=\"outline\">{loan.term}</Badge>\n                </div>\n                <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-3\">\n                  {loan.description}\n                </p>\n                <div className=\"grid grid-cols-2 gap-4 text-sm mb-4\">\n                  <div>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      Interest Rate\n                    </p>\n                    <p className=\"font-semibold\">{loan.interestRate}% APR</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600 dark:text-gray-300\">\n                      Collateral\n                    </p>\n                    <p className=\"font-semibold\">{loan.collateral}</p>\n                  </div>\n                </div>\n                <Button\n                  className=\"w-full\"\n                  onClick={() => handleApplyLoan(loan)}\n                  disabled={isProcessing || !!activeLoan}\n                >\n                  {isProcessing ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Processing...\n                    </>\n                  ) : (\n                    <>\n                      <CreditCard className=\"mr-2 h-4 w-4\" />\n                      Apply for Loan\n                    </>\n                  )}\n                </Button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Tokenized Assets */}\n      {harvestTokens.length > 0 && (\n        <Card className=\"mt-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Shield className=\"h-5 w-5\" />\n              Your Tokenized Assets\n            </CardTitle>\n            <CardDescription>\n              Manage your tokenized harvest assets\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {harvestTokens.map((token) => (\n                <div\n                  key={token.id}\n                  className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\"\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center gap-2\">\n                      <h3 className=\"font-semibold\">{token.cropType}</h3>\n                      <Badge\n                        variant={\n                          token.status === \"tokenized\" ? \"default\" : \"secondary\"\n                        }\n                      >\n                        {token.status}\n                      </Badge>\n                    </div>\n                    <span className=\"text-sm text-gray-500\">\n                      {formatDate(new Date())}\n                    </span>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Physical Amount\n                      </p>\n                      <p className=\"font-semibold\">{token.amount} tons</p>\n                    </div>\n                    <div>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Tokenized Amount\n                      </p>\n                      <p className=\"font-semibold\">\n                        {token.tokenizedAmount} tokens\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Info Section */}\n      <Card className=\"mt-8\">\n        <CardContent className=\"pt-6\">\n          <div className=\"text-center\">\n            <h3 className=\"font-semibold mb-4\">How It Works</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 text-sm\">\n              <div className=\"p-4 bg-blue-50 dark:bg-blue-950 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <Coins className=\"h-5 w-5 text-blue-600\" />\n                  <span className=\"font-semibold\">1. Tokenize</span>\n                </div>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Convert your harvest into blockchain tokens\n                </p>\n              </div>\n              <div className=\"p-4 bg-green-50 dark:bg-green-950 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <Shield className=\"h-5 w-5 text-green-600\" />\n                  <span className=\"font-semibold\">2. Collateral</span>\n                </div>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Use tokens as collateral for loans\n                </p>\n              </div>\n              <div className=\"p-4 bg-purple-50 dark:bg-purple-950 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <DollarSign className=\"h-5 w-5 text-purple-600\" />\n                  <span className=\"font-semibold\">3. Access Funds</span>\n                </div>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Get immediate access to capital\n                </p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}