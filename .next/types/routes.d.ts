// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/dashboard" | "/lending" | "/my-submissions" | "/notifications" | "/onboarding" | "/prediction" | "/settings" | "/submit-data" | "/tracker"
type AppRouteHandlerRoutes = "/api/badges" | "/api/dashboard/data" | "/api/farm-data" | "/api/farm-data/submit" | "/api/harvest-tokens" | "/api/loans" | "/api/loans/[id]/repay" | "/api/notifications" | "/api/notifications/[id]" | "/api/rewards/send" | "/api/user/data" | "/api/user/initialize" | "/api/user/onboard" | "/api/user/profile" | "/api/user/settings" | "/api/user/update-profile" | "/api/yield-predictions"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/badges": {}
  "/api/dashboard/data": {}
  "/api/farm-data": {}
  "/api/farm-data/submit": {}
  "/api/harvest-tokens": {}
  "/api/loans": {}
  "/api/loans/[id]/repay": { "id": string; }
  "/api/notifications": {}
  "/api/notifications/[id]": { "id": string; }
  "/api/rewards/send": {}
  "/api/user/data": {}
  "/api/user/initialize": {}
  "/api/user/onboard": {}
  "/api/user/profile": {}
  "/api/user/settings": {}
  "/api/user/update-profile": {}
  "/api/yield-predictions": {}
  "/dashboard": {}
  "/lending": {}
  "/my-submissions": {}
  "/notifications": {}
  "/onboarding": {}
  "/prediction": {}
  "/settings": {}
  "/submit-data": {}
  "/tracker": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
