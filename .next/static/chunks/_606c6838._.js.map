{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * A flexible and extensible content container.\n * This is the main Card component, providing a consistent layout for grouped content.\n * It supports standard div props and additional class names for styling.\n */\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\n/**\n * Renders the header section of a Card.\n * Typically used for titles, descriptions, and actions at the top of the card.\n */\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\n/**\n * Renders the main title for the Card or its header.\n * Designed for prominent text within the CardHeader.\n */\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\n/**\n * Renders a descriptive subtitle or secondary text for the Card.\n * Often used in conjunction with `CardTitle` within the `CardHeader`.\n */\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\n/**\n * Renders an action element within the CardHeader.\n * It's typically positioned to the right of the title/description.\n */\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\n/**\n * Renders the main content area of the Card.\n * Use this for the primary information or elements within the card.\n */\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\n/**\n * Renders the footer section of a Card.\n * Typically used for supplementary actions, links, or status indicators.\n */\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA;;;;CAIC,GACD,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT;;;CAGC,GACD,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT;;;CAGC,GACD,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT;;;CAGC,GACD,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT;;;CAGC,GACD,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT;;;CAGC,GACD,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT;;;CAGC,GACD,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/mendsalbert/Documents/agri-yield/app/prediction/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { toast } from \"sonner\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { formatDate } from \"@/lib/utils\";\nimport { useWalletStore } from \"@/lib/wallet-provider\";\nimport {\n  AlertTriangle,\n  ArrowLeft,\n  BarChart3,\n  CheckCircle,\n  Cloud,\n  Droplets,\n  Leaf,\n  MapPin,\n  RefreshCw,\n  TrendingUp,\n} from \"lucide-react\";\n\ninterface FarmData {\n  id: string;\n  cropType: string;\n  location: string;\n  soilMoisture: number;\n  weatherNotes?: string;\n  temperature?: number;\n  humidity?: number;\n  rainfall?: number;\n  createdAt: string;\n}\n\ninterface YieldPrediction {\n  id: string;\n  cropType: string;\n  predictedYield: number;\n  riskLevel: number;\n  confidence: number;\n  modelVersion?: string;\n  inputData?: any;\n  createdAt: string;\n  farmDataId?: string;\n}\n\nexport default function Prediction() {\n  const router = useRouter();\n  const { isConnected, account } = useWalletStore();\n\n  const [farmData, setFarmData] = useState<FarmData[]>([]);\n  const [yieldPredictions, setYieldPredictions] = useState<YieldPrediction[]>([]);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [selectedFarmData, setSelectedFarmData] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Effect to handle wallet connection status and data fetching\n  useEffect(() => {\n    if (!isConnected) {\n      router.push(\"/\");\n    } else {\n      fetchData();\n    }\n  }, [isConnected, router, account]);\n\n  /**\n   * Fetches farm data and yield predictions for the connected wallet address.\n   * Sets loading state during the fetch operation.\n   */\n  const fetchData = async () => {\n    if (!account?.address) return;\n\n    setIsLoading(true);\n    try {\n      // Fetch farm data submitted by the user\n      const farmDataResponse = await fetch(\n        `/api/farm-data?walletAddress=${account.address}`\n      );\n      if (farmDataResponse.ok) {\n        const farmDataResult = await farmDataResponse.json();\n        setFarmData(farmDataResult.data || []);\n      }\n\n      // Fetch yield predictions associated with the user's farm data\n      const predictionsResponse = await fetch(\n        `/api/yield-predictions?walletAddress=${account.address}`\n      );\n      if (predictionsResponse.ok) {\n        const predictionsResult = await predictionsResponse.json();\n        setYieldPredictions(predictionsResult.data || []);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      toast.error(\"Failed to load data\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Handles the generation of a new yield prediction.\n   * Requires selected farm data and a connected wallet.\n   */\n  const handleGeneratePrediction = async () => {\n    if (!selectedFarmData) {\n      toast.error(\"Please select farm data to analyze\");\n      return;\n    }\n\n    if (!account?.address) {\n      toast.error(\"Wallet not connected\");\n      return;\n    }\n\n    setIsGenerating(true);\n    try {\n      const response = await fetch(\"/api/yield-predictions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          walletAddress: account.address,\n          farmDataId: selectedFarmData,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to generate prediction\");\n      }\n\n      const result = await response.json();\n\n      if (result.success) {\n        // Prepend the new prediction to the existing list to show it first\n        setYieldPredictions((prev) => [result.data, ...prev]);\n        toast.success(\"Yield prediction generated successfully!\");\n        setSelectedFarmData(\"\"); // Reset selected farm data after successful generation\n      } else {\n        throw new Error(result.error || \"Failed to generate prediction\");\n      }\n    } catch (error) {\n      console.error(\"Failed to generate prediction:\", error);\n      toast.error(\"Failed to generate prediction. Please try again.\");\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Prepare data for the yield vs. risk chart\n  const yieldData = yieldPredictions.map((pred, index) => ({\n    name: `${pred.cropType} ${index + 1}`,\n    yield: pred.predictedYield,\n    risk: pred.riskLevel,\n    confidence: pred.confidence * 100,\n    date: new Date(pred.createdAt).toLocaleDateString(),\n  }));\n\n  // Calculate distribution of risk levels for the pie chart\n  const riskData = [\n    {\n      name: \"Low Risk\",\n      value: yieldPredictions.filter((p) => p.riskLevel < 15).length,\n      color: \"#10b981\",\n    },\n    {\n      name: \"Medium Risk\",\n      value: yieldPredictions.filter(\n        (p) => p.riskLevel >= 15 && p.riskLevel < 25\n      ).length,\n      color: \"#f59e0b\",\n    },\n    {\n      name: \"High Risk\",\n      value: yieldPredictions.filter((p) => p.riskLevel >= 25).length,\n      color: \"#ef4444\",\n    },\n  ].filter((item) => item.value > 0); // Only include risk categories that have predictions\n\n  if (!isConnected) {\n    return null;\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center gap-4\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => router.push(\"/dashboard\")}\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back\n          </Button>\n          <div>\n            <h1 className=\"text-3xl font-bold text-foreground\">\n              Yield Predictions\n            </h1>\n            <p className=\"text-muted-foreground\">Loading your data...</p>\n          </div>\n        </div>\n        <div className=\"flex items-center justify-center py-12\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header section for the Yield Predictions page */}\n      <div className=\"flex items-center gap-4\">\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          onClick={() => router.push(\"/dashboard\")}\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back\n        </Button>\n        <div>\n          <h1 className=\"text-3xl font-bold text-foreground\">\n            Yield Predictions\n          </h1>\n          <p className=\"text-muted-foreground\">\n            AI-powered crop yield predictions and risk analysis\n          </p>\n        </div>\n      </div>\n\n      {/* Card to generate new yield predictions */}\n      <Card className=\"dashboard-card\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <BarChart3 className=\"h-5 w-5\" />\n            Generate New Prediction\n          </CardTitle>\n          <CardDescription>\n            Get AI-powered yield predictions based on your submitted farm data\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {farmData.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <Leaf className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">\n                No Farm Data Available\n              </h3>\n              <p className=\"text-muted-foreground mb-4\">\n                You need to submit farm data first to generate predictions.\n              </p>\n              <Button\n                onClick={() => router.push(\"/submit-data\")}\n                className=\"btn-primary\"\n              >\n                Submit Farm Data\n              </Button>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">\n                  Select Farm Data to Analyze\n                </label>\n                <select\n                  className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800\"\n                  value={selectedFarmData}\n                  onChange={(e) => setSelectedFarmData(e.target.value)}\n                >\n                  <option value=\"\">Choose farm data...</option>\n                  {farmData.map((data) => (\n                    <option key={data.id} value={data.id}>\n                      {data.cropType} - {data.location} (\n                      {new Date(data.createdAt).toLocaleDateString()})\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              {selectedFarmData && (\n                <div className=\"p-4 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                  {/* Display details of the currently selected farm data */}\n                  {(() => {\n                    const selectedData = farmData.find(\n                      (d) => d.id === selectedFarmData\n                    );\n                    if (!selectedData) return null;\n\n                    return (\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          <Leaf className=\"h-4 w-4 text-green-600\" />\n                          <span className=\"font-medium\">Crop:</span>\n                          <span>{selectedData.cropType}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"h-4 w-4 text-blue-600\" />\n                          <span className=\"font-medium\">Location:</span>\n                          <span>{selectedData.location}</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Droplets className=\"h-4 w-4 text-blue-600\" />\n                          <span className=\"font-medium\">Soil Moisture:</span>\n                          <span>{selectedData.soilMoisture}%</span>\n                        </div>\n                        {selectedData.temperature && (\n                          <div className=\"flex items-center gap-2\">\n                            <Cloud className=\"h-4 w-4 text-gray-600\" />\n                            <span className=\"font-medium\">Temperature:</span>\n                            <span>{selectedData.temperature}°C</span>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })()}\n                </div>\n              )}\n\n              <Button\n                onClick={handleGeneratePrediction}\n                disabled={isGenerating || !selectedFarmData}\n                className=\"w-full btn-primary\"\n              >\n                {isGenerating ? (\n                  <>\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                    Generating AI Prediction...\n                  </>\n                ) : (\n                  <>\n                    <RefreshCw className=\"mr-2 h-4 w-4\" />\n                    Generate AI Prediction\n                  </>\n                )}\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {yieldPredictions.length > 0 ? (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Yield vs Risk Chart */}\n          <Card className=\"dashboard-card\">\n            <CardHeader>\n              <CardTitle>Yield vs Risk Analysis</CardTitle>\n              <CardDescription>\n                Predicted yield and risk levels for your crops\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-80\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart data={yieldData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar\n                      dataKey=\"yield\"\n                      fill=\"#10b981\"\n                      name=\"Yield (tons/ha)\"\n                    />\n                    <Bar dataKey=\"risk\" fill=\"#ef4444\" name=\"Risk (%)\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Risk Distribution Chart */}\n          <Card className=\"dashboard-card\">\n            <CardHeader>\n              <CardTitle>Risk Distribution</CardTitle>\n              <CardDescription>\n                Distribution of risk levels across your predictions\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-80\">\n                {riskData.length > 0 ? (\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <PieChart>\n                      <Pie\n                        data={riskData}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        label={({ name, value, percent }) =>\n                          `${name}: ${value} (${(percent * 100).toFixed(0)}%)`\n                        }\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                      >\n                        {riskData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.color} />\n                        ))}\n                      </Pie>\n                      <Tooltip\n                        formatter={(value, name) => [value, name]}\n                        labelFormatter={(label) => `Risk Level: ${label}`}\n                      />\n                    </PieChart>\n                  </ResponsiveContainer>\n                ) : (\n                  <div className=\"flex items-center justify-center h-full\">\n                    <div className=\"text-center\">\n                      <div className=\"text-4xl mb-2\">📊</div>\n                      <p className=\"text-muted-foreground\">\n                        No risk data available\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Generate predictions to see risk distribution\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      ) : (\n        <Card className=\"dashboard-card\">\n          <CardContent className=\"text-center py-12\">\n            <BarChart3 className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n            <h3 className=\"text-xl font-semibold mb-2\">No Predictions Yet</h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Generate your first AI-powered yield prediction to see detailed\n              analytics\n            </p>\n            {farmData.length > 0 && (\n              <Button\n                onClick={() => document.querySelector(\"select\")?.focus()}\n                className=\"btn-primary\"\n              >\n                Generate First Prediction\n              </Button>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Recent Predictions List */}\n      <Card className=\"dashboard-card\">\n        <CardHeader>\n          <CardTitle>Recent Predictions</CardTitle>\n          <CardDescription>\n            Your latest yield predictions and recommendations\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {yieldPredictions.length > 0 ? (\n            <div className=\"space-y-4\">\n              {/* Display the 5 most recent predictions, newest first */}\n              {yieldPredictions\n                .slice(-5)\n                .reverse()\n                .map((prediction, index) => (\n                  <div\n                    key={index}\n                    className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\"\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <h3 className=\"font-semibold\">{prediction.cropType}</h3>\n                        <Badge\n                          variant={\n                            prediction.riskLevel < 15\n                              ? \"default\"\n                              : prediction.riskLevel < 25\n                              ? \"secondary\"\n                              : \"destructive\"\n                          }\n                        >\n                          {prediction.riskLevel < 15\n                            ? \"Low Risk\"\n                            : prediction.riskLevel < 25\n                            ? \"Medium Risk\"\n                            : \"High Risk\"}\n                        </Badge>\n                      </div>\n                      <span className=\"text-sm text-gray-500\">\n                        {/* Note: The interface defines 'createdAt', but the code uses 'timestamp'. */}\n                        {/* This might result in 'N/A' if prediction.timestamp is not provided by the API. */}\n                        {prediction.timestamp\n                          ? formatDate(prediction.timestamp)\n                          : \"N/A\"}\n                      </span>\n                    </div>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div className=\"text-center p-3 bg-green-50 dark:bg-green-950 rounded-lg\">\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                          Predicted Yield\n                        </p>\n                        <p className=\"text-2xl font-bold text-green-600\">\n                          {prediction.predictedYield} tons\n                        </p>\n                      </div>\n                      <div className=\"text-center p-3 bg-orange-50 dark:bg-orange-950 rounded-lg\">\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                          Risk Level\n                        </p>\n                        <p className=\"text-2xl font-bold text-orange-600\">\n                          {prediction.riskLevel}%\n                        </p>\n                      </div>\n                      <div className=\"text-center p-3 bg-blue-50 dark:bg-blue-950 rounded-lg\">\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300\">\n                          Confidence\n                        </p>\n                        <p className=\"text-2xl font-bold text-blue-600\">\n                          {prediction.confidence}%\n                        </p>\n                      </div>\n                    </div>\n\n                    {/* AI Insights and Recommendations */}\n                    <div className=\"mt-4 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                      <div className=\"flex items-start gap-2\">\n                        {prediction.riskLevel < 15 ? (\n                          <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                        ) : (\n                          <AlertTriangle className=\"h-5 w-5 text-orange-600 mt-0.5\" />\n                        )}\n                        <div className=\"flex-1\">\n                          <p className=\"font-medium text-sm\">\n                            {prediction.riskLevel < 15\n                              ? \"Excellent conditions! Your crop is expected to perform well.\"\n                              : prediction.riskLevel < 25\n                              ? \"Good conditions with some risk factors to monitor.\"\n                              : \"High risk detected. Consider additional measures to protect your crop.\"}\n                          </p>\n                          <p className=\"text-xs text-gray-600 dark:text-gray-300 mt-1\">\n                            AI Confidence:{\" \"}\n                            {(prediction.confidence * 100).toFixed(0)}% | Model:{\" \"}\n                            {prediction.modelVersion || \"Gemini AI\"}\n                          </p>\n\n                          {/* Show AI factors if available */}\n                          {prediction.inputData?.aiFactors && (\n                            <div className=\"mt-2\">\n                              <p className=\"text-xs font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                                Key Factors:\n                              </p>\n                              <div className=\"space-y-1\">\n                                {prediction.inputData.aiFactors\n                                  .slice(0, 3)\n                                  .map((factor: string, idx: number) => (\n                                    <div\n                                      key={idx}\n                                      className=\"text-xs text-gray-600 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded break-words\"\n                                    >\n                                      {factor}\n                                    </div>\n                                  ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-8\">\n              <BarChart3 className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <p className=\"text-muted-foreground\">\n                No predictions available. Generate your first AI-powered\n                prediction above.\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* AI Insights Summary Card */}\n      {yieldPredictions.length > 0 && (\n        <Card className=\"dashboard-card\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <TrendingUp className=\"h-5 w-5\" />\n              AI Insights Summary\n            </CardTitle>\n            <CardDescription>\n              Key insights from your yield predictions\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 bg-green-50 dark:bg-green-950 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {yieldPredictions.length}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  Total Predictions\n                </div>\n              </div>\n              <div className=\"text-center p-4 bg-blue-50 dark:bg-blue-950 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {(\n                    (yieldPredictions.reduce(\n                      (acc, p) => acc + p.confidence,\n                      0\n                    ) /\n                      yieldPredictions.length) *\n                    100\n                  ).toFixed(0)}\n                  %\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  Average AI Confidence\n                </div>\n              </div>\n              <div className=\"text-center p-4 bg-purple-50 dark:bg-purple-950 rounded-lg\">\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {(\n                    yieldPredictions.reduce(\n                      (acc, p) => acc + p.predictedYield,\n                      0\n                    ) /\n                    yieldPredictions.length\n                  ).toFixed(1)}{\" \"}\n                  tons/ha\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  Average Predicted Yield\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}